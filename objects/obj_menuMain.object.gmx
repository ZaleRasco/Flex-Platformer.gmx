<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_control</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initiate Variables
//Placement locations
titleBottom = 289
optionSize = 105
interval = optionSize / 4

//Button inputs
up = 0
down = 0
select = 0

//Control
quitTimer = 0

/*----------MENU SELECT----------//
//1 = PLAY
//2 = OPTIONS
//3 = EXIT
//-------------------------------*/
menuOption[0] = spr_menuNewGame
menuOption[1] = spr_menuContinue
menuOption[2] = spr_menuExit
menuOption[3] = spr_menuExit
numberOfOptions = array_length_1d(menuOption) - 1

//Utility
drawNumber = 0
menuSelection = 0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Crab Control
//Array of Crab Names and Death State
crabArray[0,0] = "Jimmy Crab"
crabArray[0,1] = false
crabArray[1,0] = "Johnny Crab"
crabArray[1,1] = false
crabArray[2,0] = "Crabbey"
crabArray[2,1] = false
crabArray[3,0] = "Crabera"
crabArray[3,1] = false
crabArray[4,0] = "Crabby McCrabface"
crabArray[4,1] = false
crabArray[5,0] = "Crabby Grumpers"
crabArray[5,1] = false
crabArray[6,0] = "Crosby Crab"
crabArray[6,1] = false
crabArray[7,0] = "Crabaline"
crabArray[7,1] = false
crabArray[8,0] = "Crub"
crabArray[8,1] = false
crabArray[9,0] = "Crimbo Crab"
crabArray[9,1] = false
crabArray[10,0] = "Crabette"
crabArray[10,1] = false
crabArray[11,0] = "Horace"
crabArray[11,1] = false
crabArray[12,0] = "Larry Crab"
crabArray[12,1] = false
crabArray[13,0] = "Murly Crab"
crabArray[13,1] = false
crabArray[14,0] = "Coe"
crabArray[14,1] = false
crabArray[15,0] = "Robert E. Crab"
crabArray[15,1] = false
crabArray[16,0] = "Crusty"
crabArray[16,1] = false
crabArray[17,0] = "Crumb"
crabArray[17,1] = false
crabArray[18,0] = "Crabs McKenzie"
crabArray[18,1] = false
crabArray[19,0] = "Shauna Crabdonald"
crabArray[19,1] = false
crabArray[20,0] = "Rangoon"
crabArray[10, 1] = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Button Inputs
if (keyboard_check_pressed(ord('S')) || keyboard_check_pressed(vk_down)){
    down = true;
}else{
    down = false;
}

if (keyboard_check_pressed(ord('W')) || keyboard_check_pressed(vk_up)){
    up = true;
}else{
    up = false;
}

if ((keyboard_check(vk_space)) or (keyboard_check(vk_enter)) or (keyboard_check(ord("E")))){
    select = true;
}else{
    select = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Selection
if (down){
    if (menuSelection &lt; numberOfOptions){
        menuSelection += 1;
    }else{
        menuSelection = 0;
    }
}

if (up){
    if (menuSelection &gt; 0){
        menuSelection -= 1;
    }else{
        menuSelection = numberOfOptions;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Execute choice
//Calls scripts for each menu option when space or enter is pressed.
if (select){
    switch (menuSelection){
        case 0: scr_menuNewGame(); break;
        case 1: scr_menuContinue(); break;
        case 2: scr_menuOptions(); break;
        case 3: scr_menuExit(); break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw menu options
drawNumber = 0

for(i = 0; i &lt; array_length_1d(menuOption); i++;){
    if menuSelection = drawNumber {
        draw_sprite(menuOption[drawNumber],1,room_width/2,(200 + ((interval * (drawNumber + 1)) + (optionSize * drawNumber))))
    }else{
        draw_sprite(menuOption[drawNumber],0,room_width/2,(200 + ((interval * (drawNumber + 1)) + (optionSize * drawNumber))))
    }
    drawNumber ++
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
